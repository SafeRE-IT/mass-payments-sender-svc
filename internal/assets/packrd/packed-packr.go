// +build !skippackr
// Code generated by github.com/gobuffalo/packr/v2. DO NOT EDIT.

// You can use the "packr2 clean" command to clean up this,
// and any other packr generated files.
package packrd

import (
	"github.com/gobuffalo/packr/v2"
	"github.com/gobuffalo/packr/v2/file/resolver"
)

var _ = func() error {
	const gk = "7751bdfe8d5f79a972bd24e377f55a67"
	g := packr.New(gk, "")
	hgr, err := resolver.NewHexGzip(map[string]string{
		"ee8ea8be4e43b3380973423a2c0b2012": "1f8b08000000000000ff9c91414e03310c45f7398597ada027e8962bb01eb993df62357182e3a80ca7474c5b180656eca2ff2ce53f7bb7a3872c2763073dd71046c3e7d3f9904086d78ee68d36818848221de424ea544d32db44674c8f332a178591e3cd498b93f694aea0397b6f7f91234bea86c1c0ade83c7105a98ce75e87ae2e895c329a73ae74117f29dde784de8b226cf7abbe95a70c5df56d30e1f4bbf24d6ef8b6baf723c311061dd1be56b091b8a5a21491e0a091dbc811ff76e45cbafaede36b14d15c945d7e0c2ed2c1a78a19cde6cbcb3d958b8610add4d5e5f6cbf0be9efd47000000ffffa63b3ed6f5010000",
	})
	if err != nil {
		panic(err)
	}
	g.DefaultResolver = hgr

	func() {
		b := packr.New("migrations", "./migrations")
		b.SetResolver("001_initial.sql", packr.Pointer{ForwardBox: gk, ForwardPath: "ee8ea8be4e43b3380973423a2c0b2012"})
		}()

	return nil
}()
