// +build !skippackr
// Code generated by github.com/gobuffalo/packr/v2. DO NOT EDIT.

// You can use the "packr2 clean" command to clean up this,
// and any other packr generated files.
package packrd

import (
	"github.com/gobuffalo/packr/v2"
	"github.com/gobuffalo/packr/v2/file/resolver"
)

var _ = func() error {
	const gk = "7751bdfe8d5f79a972bd24e377f55a67"
	g := packr.New(gk, "")
	hgr, err := resolver.NewHexGzip(map[string]string{
		"ee8ea8be4e43b3380973423a2c0b2012": "1f8b08000000000000ff9c91414e03310c45f7398597ada027e8962bb01eb9c96fb19a7182e3a80ca7479d29301456eca2ff2ce53f7bb7a387514ec60e7aae2144c3f5e97cc820c36b47f3469b404424890e721275aa2623db44674c8f332a178591e3cd498b93f69c17d09cbdb7bfc8912577c360e056749e58402ef1dcebd0d52593cb88e63c56ba88bf94ee7342ef4511b6fbbbbe6eac8da34bd19f9d1b4c38ffae7d131cbecd3e3b92e1088346b4af356c246da92825643828728b9cf06f4f1e4b57bf7dbc4409cd45f92ab01a5ca5834f15339aedd7d77b2a170d2159a977d7dbafc3f58af61f010000ffffd4b5ec39fd010000",
	})
	if err != nil {
		panic(err)
	}
	g.DefaultResolver = hgr

	func() {
		b := packr.New("migrations", "./migrations")
		b.SetResolver("001_initial.sql", packr.Pointer{ForwardBox: gk, ForwardPath: "ee8ea8be4e43b3380973423a2c0b2012"})
		}()

	return nil
}()
