// +build !skippackr
// Code generated by github.com/gobuffalo/packr/v2. DO NOT EDIT.

// You can use the "packr2 clean" command to clean up this,
// and any other packr generated files.
package packrd

import (
	"github.com/gobuffalo/packr/v2"
	"github.com/gobuffalo/packr/v2/file/resolver"
)

var _ = func() error {
	const gk = "7751bdfe8d5f79a972bd24e377f55a67"
	g := packr.New(gk, "")
	hgr, err := resolver.NewHexGzip(map[string]string{
		"ee8ea8be4e43b3380973423a2c0b2012": "1f8b08000000000000ff9c914d6e02310c85f7398597a09613b0ed15ba1e99c9835a244eea3882e9e9ab0ed0a229dd7417f973e4f7b3d9d0539683b1835e6b08a3e1ebe9bc4b20c37b47f346ab4044249176721075aa26996da223a6e7199593c2c87176d2e2a43da50b68cededb23b26749dd3018b8159d372e2095f1d8ebd0d525914b4673ce954ee26fa5fb3ca18fa208ebed426fe52943177a1b4c38fd967c3537fcb8bae923c31e061dd1be2358495c53518a4870d0c86de4887f7be45cbafaf2f0854534176597eb8fbff1e053c5a31d3f0fbb12a719cd31ddd7fc524e1a42b45217356fef87b72cb79f010000ffff89d4f48f22020000",
	})
	if err != nil {
		panic(err)
	}
	g.DefaultResolver = hgr

	func() {
		b := packr.New("migrations", "./migrations")
		b.SetResolver("001_initial.sql", packr.Pointer{ForwardBox: gk, ForwardPath: "ee8ea8be4e43b3380973423a2c0b2012"})
		}()

	return nil
}()
